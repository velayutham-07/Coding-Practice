# LeetCode 290 (Easy)

# Given a pattern and a string s, find if s follows the same pattern.
# Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s. Specifically:
# Each letter in pattern maps to exactly one unique word in s.
# Each unique word in s maps to exactly one letter in pattern.
# No two letters map to the same word, and no two words map to the same letter.

# Java Code :

class Solution {
    public boolean wordPattern(String pattern, String s) {
        
        String [] arr=s.split(" ");
        int slen=arr.length;
        int plen=pattern.length();
        if(plen != slen)return false;
        Map<Character,String>map=new HashMap<>();
        int i=-1;
         char [] arr2=pattern.toCharArray();
        for(Character ch :arr2){
             i++;
            if(map.containsKey(ch)){
             if(!map.get(ch).equals(arr[i]))return false;
            }
            else if(map.containsValue(arr[i])){
                return false;

            }
            else{
            map.put(ch,arr[i]);
           }
       }
        return true;
    }
}
