# LeetCode 3066 (Medium)

# You are given a 0-indexed integer array nums, and an integer k.
# You are allowed to perform some operations on nums, where in a single operation, you can:

# Select the two smallest integers x and y from nums.
# Remove x and y from nums.
# Insert (min(x, y) * 2 + max(x, y)) at any position in the array.
# Note that you can only apply the described operation if nums contains at least two elements.

# Return the minimum number of operations needed so that all elements of the array are greater than or equal to k.

# Java Code :

class Solution {
    public int minOperations(int[] nums, int k) {
        int ops = 0;
        PriorityQueue<Long> l = new PriorityQueue<>();
        for(int i : nums){
            l.add((long)i);
        }
        while(l.peek()<k){
            long x = l.poll();
            long y = l.poll();
            long val = (Math.min(x,y) * 2 + Math.max(x,y));
            l.add(val);
            ops++;
        }
        return ops;
    }
}
