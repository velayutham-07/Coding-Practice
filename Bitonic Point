# GeeksforGeeks (Easy)

# Given an array of integers arr[] that is first strictly increasing and then maybe strictly decreasing, find the bitonic point, that is the maximum element in the array.
# Bitonic Point is a point before which elements are strictly increasing and after which elements are strictly decreasing.

# Note: It is guaranteed that the array contains exactly one bitonic point.

# Java Code : 

class Solution {
    public int findMaximum(int[] arr) {
        // code here
        int left = 0, right = arr.length - 1;
        while(left < right) {
            int mid = left + (right - left) / 2;
            
            if(arr[mid] < arr[mid+1]) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return arr[left];
    }
}
